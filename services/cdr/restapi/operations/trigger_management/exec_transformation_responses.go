// Code generated by go-swagger; DO NOT EDIT.

package trigger_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/GoDieNow/TFT_Code/services/cdr/models"
)

// ExecTransformationOKCode is the HTTP code returned for type ExecTransformationOK
const ExecTransformationOKCode int = 200

/*ExecTransformationOK Transformation task executed successfully.

swagger:response execTransformationOK
*/
type ExecTransformationOK struct {
}

// NewExecTransformationOK creates ExecTransformationOK with default headers values
func NewExecTransformationOK() *ExecTransformationOK {

	return &ExecTransformationOK{}
}

// WriteResponse to the client
func (o *ExecTransformationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ExecTransformationInternalServerErrorCode is the HTTP code returned for type ExecTransformationInternalServerError
const ExecTransformationInternalServerErrorCode int = 500

/*ExecTransformationInternalServerError Something unexpected happend, error raised

swagger:response execTransformationInternalServerError
*/
type ExecTransformationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewExecTransformationInternalServerError creates ExecTransformationInternalServerError with default headers values
func NewExecTransformationInternalServerError() *ExecTransformationInternalServerError {

	return &ExecTransformationInternalServerError{}
}

// WithPayload adds the payload to the exec transformation internal server error response
func (o *ExecTransformationInternalServerError) WithPayload(payload *models.ErrorResponse) *ExecTransformationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the exec transformation internal server error response
func (o *ExecTransformationInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ExecTransformationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
