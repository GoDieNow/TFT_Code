// Code generated by go-swagger; DO NOT EDIT.

package usage_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/GoDieNow/TFT_Code/services/cdr/models"
)

// GetUsageSummaryOKCode is the HTTP code returned for type GetUsageSummaryOK
const GetUsageSummaryOKCode int = 200

/*GetUsageSummaryOK Description of a successfully operation

swagger:response getUsageSummaryOK
*/
type GetUsageSummaryOK struct {

	/*
	  In: Body
	*/
	Payload *models.UISummary `json:"body,omitempty"`
}

// NewGetUsageSummaryOK creates GetUsageSummaryOK with default headers values
func NewGetUsageSummaryOK() *GetUsageSummaryOK {

	return &GetUsageSummaryOK{}
}

// WithPayload adds the payload to the get usage summary o k response
func (o *GetUsageSummaryOK) WithPayload(payload *models.UISummary) *GetUsageSummaryOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get usage summary o k response
func (o *GetUsageSummaryOK) SetPayload(payload *models.UISummary) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsageSummaryOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsageSummaryInternalServerErrorCode is the HTTP code returned for type GetUsageSummaryInternalServerError
const GetUsageSummaryInternalServerErrorCode int = 500

/*GetUsageSummaryInternalServerError Something unexpected happend, error raised

swagger:response getUsageSummaryInternalServerError
*/
type GetUsageSummaryInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetUsageSummaryInternalServerError creates GetUsageSummaryInternalServerError with default headers values
func NewGetUsageSummaryInternalServerError() *GetUsageSummaryInternalServerError {

	return &GetUsageSummaryInternalServerError{}
}

// WithPayload adds the payload to the get usage summary internal server error response
func (o *GetUsageSummaryInternalServerError) WithPayload(payload *models.ErrorResponse) *GetUsageSummaryInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get usage summary internal server error response
func (o *GetUsageSummaryInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsageSummaryInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
