// Code generated by go-swagger; DO NOT EDIT.

package usage_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/GoDieNow/TFT_Code/services/udr/models"
)

// GetUsageReader is a Reader for the GetUsage structure.
type GetUsageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetUsageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUsageOK creates a GetUsageOK with default headers values
func NewGetUsageOK() *GetUsageOK {
	return &GetUsageOK{}
}

/*GetUsageOK handles this case with default header values.

Description of a successfully operation
*/
type GetUsageOK struct {
	Payload []*models.UReport
}

func (o *GetUsageOK) Error() string {
	return fmt.Sprintf("[GET /usage/{id}][%d] getUsageOK  %+v", 200, o.Payload)
}

func (o *GetUsageOK) GetPayload() []*models.UReport {
	return o.Payload
}

func (o *GetUsageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsageInternalServerError creates a GetUsageInternalServerError with default headers values
func NewGetUsageInternalServerError() *GetUsageInternalServerError {
	return &GetUsageInternalServerError{}
}

/*GetUsageInternalServerError handles this case with default header values.

Something unexpected happend, error raised
*/
type GetUsageInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetUsageInternalServerError) Error() string {
	return fmt.Sprintf("[GET /usage/{id}][%d] getUsageInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUsageInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetUsageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
