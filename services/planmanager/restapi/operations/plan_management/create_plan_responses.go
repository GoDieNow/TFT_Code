// Code generated by go-swagger; DO NOT EDIT.

package plan_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/GoDieNow/TFT_Code/services/planmanager/models"
)

// CreatePlanCreatedCode is the HTTP code returned for type CreatePlanCreated
const CreatePlanCreatedCode int = 201

/*CreatePlanCreated item created

swagger:response createPlanCreated
*/
type CreatePlanCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ItemCreatedResponse `json:"body,omitempty"`
}

// NewCreatePlanCreated creates CreatePlanCreated with default headers values
func NewCreatePlanCreated() *CreatePlanCreated {

	return &CreatePlanCreated{}
}

// WithPayload adds the payload to the create plan created response
func (o *CreatePlanCreated) WithPayload(payload *models.ItemCreatedResponse) *CreatePlanCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create plan created response
func (o *CreatePlanCreated) SetPayload(payload *models.ItemCreatedResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreatePlanCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreatePlanBadRequestCode is the HTTP code returned for type CreatePlanBadRequest
const CreatePlanBadRequestCode int = 400

/*CreatePlanBadRequest invalid input, object invalid

swagger:response createPlanBadRequest
*/
type CreatePlanBadRequest struct {
}

// NewCreatePlanBadRequest creates CreatePlanBadRequest with default headers values
func NewCreatePlanBadRequest() *CreatePlanBadRequest {

	return &CreatePlanBadRequest{}
}

// WriteResponse to the client
func (o *CreatePlanBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// CreatePlanConflictCode is the HTTP code returned for type CreatePlanConflict
const CreatePlanConflictCode int = 409

/*CreatePlanConflict an existing item already exists

swagger:response createPlanConflict
*/
type CreatePlanConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreatePlanConflict creates CreatePlanConflict with default headers values
func NewCreatePlanConflict() *CreatePlanConflict {

	return &CreatePlanConflict{}
}

// WithPayload adds the payload to the create plan conflict response
func (o *CreatePlanConflict) WithPayload(payload *models.ErrorResponse) *CreatePlanConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create plan conflict response
func (o *CreatePlanConflict) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreatePlanConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreatePlanInternalServerErrorCode is the HTTP code returned for type CreatePlanInternalServerError
const CreatePlanInternalServerErrorCode int = 500

/*CreatePlanInternalServerError unexpected error

swagger:response createPlanInternalServerError
*/
type CreatePlanInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreatePlanInternalServerError creates CreatePlanInternalServerError with default headers values
func NewCreatePlanInternalServerError() *CreatePlanInternalServerError {

	return &CreatePlanInternalServerError{}
}

// WithPayload adds the payload to the create plan internal server error response
func (o *CreatePlanInternalServerError) WithPayload(payload *models.ErrorResponse) *CreatePlanInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create plan internal server error response
func (o *CreatePlanInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreatePlanInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
