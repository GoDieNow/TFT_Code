// Code generated by go-swagger; DO NOT EDIT.

package cycle_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/GoDieNow/TFT_Code/services/planmanager/models"
)

// GetCycleOKCode is the HTTP code returned for type GetCycleOK
const GetCycleOKCode int = 200

/*GetCycleOK cycle returned

swagger:response getCycleOK
*/
type GetCycleOK struct {

	/*
	  In: Body
	*/
	Payload *models.Cycle `json:"body,omitempty"`
}

// NewGetCycleOK creates GetCycleOK with default headers values
func NewGetCycleOK() *GetCycleOK {

	return &GetCycleOK{}
}

// WithPayload adds the payload to the get cycle o k response
func (o *GetCycleOK) WithPayload(payload *models.Cycle) *GetCycleOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cycle o k response
func (o *GetCycleOK) SetPayload(payload *models.Cycle) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCycleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCycleNotFoundCode is the HTTP code returned for type GetCycleNotFound
const GetCycleNotFoundCode int = 404

/*GetCycleNotFound cycle with id not found

swagger:response getCycleNotFound
*/
type GetCycleNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetCycleNotFound creates GetCycleNotFound with default headers values
func NewGetCycleNotFound() *GetCycleNotFound {

	return &GetCycleNotFound{}
}

// WithPayload adds the payload to the get cycle not found response
func (o *GetCycleNotFound) WithPayload(payload *models.ErrorResponse) *GetCycleNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cycle not found response
func (o *GetCycleNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCycleNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCycleInternalServerErrorCode is the HTTP code returned for type GetCycleInternalServerError
const GetCycleInternalServerErrorCode int = 500

/*GetCycleInternalServerError unexpected error

swagger:response getCycleInternalServerError
*/
type GetCycleInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetCycleInternalServerError creates GetCycleInternalServerError with default headers values
func NewGetCycleInternalServerError() *GetCycleInternalServerError {

	return &GetCycleInternalServerError{}
}

// WithPayload adds the payload to the get cycle internal server error response
func (o *GetCycleInternalServerError) WithPayload(payload *models.ErrorResponse) *GetCycleInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cycle internal server error response
func (o *GetCycleInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCycleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
