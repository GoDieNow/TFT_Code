// Code generated by go-swagger; DO NOT EDIT.

package bundle_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/GoDieNow/TFT_Code/services/planmanager/models"
)

// CreateSkuBundleCreatedCode is the HTTP code returned for type CreateSkuBundleCreated
const CreateSkuBundleCreatedCode int = 201

/*CreateSkuBundleCreated item created

swagger:response createSkuBundleCreated
*/
type CreateSkuBundleCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ItemCreatedResponse `json:"body,omitempty"`
}

// NewCreateSkuBundleCreated creates CreateSkuBundleCreated with default headers values
func NewCreateSkuBundleCreated() *CreateSkuBundleCreated {

	return &CreateSkuBundleCreated{}
}

// WithPayload adds the payload to the create sku bundle created response
func (o *CreateSkuBundleCreated) WithPayload(payload *models.ItemCreatedResponse) *CreateSkuBundleCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create sku bundle created response
func (o *CreateSkuBundleCreated) SetPayload(payload *models.ItemCreatedResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSkuBundleCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateSkuBundleBadRequestCode is the HTTP code returned for type CreateSkuBundleBadRequest
const CreateSkuBundleBadRequestCode int = 400

/*CreateSkuBundleBadRequest invalid input, object invalid

swagger:response createSkuBundleBadRequest
*/
type CreateSkuBundleBadRequest struct {
}

// NewCreateSkuBundleBadRequest creates CreateSkuBundleBadRequest with default headers values
func NewCreateSkuBundleBadRequest() *CreateSkuBundleBadRequest {

	return &CreateSkuBundleBadRequest{}
}

// WriteResponse to the client
func (o *CreateSkuBundleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// CreateSkuBundleConflictCode is the HTTP code returned for type CreateSkuBundleConflict
const CreateSkuBundleConflictCode int = 409

/*CreateSkuBundleConflict an existing item already exists

swagger:response createSkuBundleConflict
*/
type CreateSkuBundleConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateSkuBundleConflict creates CreateSkuBundleConflict with default headers values
func NewCreateSkuBundleConflict() *CreateSkuBundleConflict {

	return &CreateSkuBundleConflict{}
}

// WithPayload adds the payload to the create sku bundle conflict response
func (o *CreateSkuBundleConflict) WithPayload(payload *models.ErrorResponse) *CreateSkuBundleConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create sku bundle conflict response
func (o *CreateSkuBundleConflict) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSkuBundleConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateSkuBundleInternalServerErrorCode is the HTTP code returned for type CreateSkuBundleInternalServerError
const CreateSkuBundleInternalServerErrorCode int = 500

/*CreateSkuBundleInternalServerError unexpected error

swagger:response createSkuBundleInternalServerError
*/
type CreateSkuBundleInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateSkuBundleInternalServerError creates CreateSkuBundleInternalServerError with default headers values
func NewCreateSkuBundleInternalServerError() *CreateSkuBundleInternalServerError {

	return &CreateSkuBundleInternalServerError{}
}

// WithPayload adds the payload to the create sku bundle internal server error response
func (o *CreateSkuBundleInternalServerError) WithPayload(payload *models.ErrorResponse) *CreateSkuBundleInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create sku bundle internal server error response
func (o *CreateSkuBundleInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSkuBundleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
