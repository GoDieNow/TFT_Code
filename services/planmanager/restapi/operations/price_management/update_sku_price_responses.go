// Code generated by go-swagger; DO NOT EDIT.

package price_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/GoDieNow/TFT_Code/services/planmanager/models"
)

// UpdateSkuPriceOKCode is the HTTP code returned for type UpdateSkuPriceOK
const UpdateSkuPriceOKCode int = 200

/*UpdateSkuPriceOK updated sku price

swagger:response updateSkuPriceOK
*/
type UpdateSkuPriceOK struct {

	/*
	  In: Body
	*/
	Payload *models.SkuPrice `json:"body,omitempty"`
}

// NewUpdateSkuPriceOK creates UpdateSkuPriceOK with default headers values
func NewUpdateSkuPriceOK() *UpdateSkuPriceOK {

	return &UpdateSkuPriceOK{}
}

// WithPayload adds the payload to the update sku price o k response
func (o *UpdateSkuPriceOK) WithPayload(payload *models.SkuPrice) *UpdateSkuPriceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update sku price o k response
func (o *UpdateSkuPriceOK) SetPayload(payload *models.SkuPrice) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSkuPriceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSkuPriceNotFoundCode is the HTTP code returned for type UpdateSkuPriceNotFound
const UpdateSkuPriceNotFoundCode int = 404

/*UpdateSkuPriceNotFound sku price with skupriceid not found

swagger:response updateSkuPriceNotFound
*/
type UpdateSkuPriceNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewUpdateSkuPriceNotFound creates UpdateSkuPriceNotFound with default headers values
func NewUpdateSkuPriceNotFound() *UpdateSkuPriceNotFound {

	return &UpdateSkuPriceNotFound{}
}

// WithPayload adds the payload to the update sku price not found response
func (o *UpdateSkuPriceNotFound) WithPayload(payload *models.ErrorResponse) *UpdateSkuPriceNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update sku price not found response
func (o *UpdateSkuPriceNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSkuPriceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSkuPriceInternalServerErrorCode is the HTTP code returned for type UpdateSkuPriceInternalServerError
const UpdateSkuPriceInternalServerErrorCode int = 500

/*UpdateSkuPriceInternalServerError unexpected error

swagger:response updateSkuPriceInternalServerError
*/
type UpdateSkuPriceInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewUpdateSkuPriceInternalServerError creates UpdateSkuPriceInternalServerError with default headers values
func NewUpdateSkuPriceInternalServerError() *UpdateSkuPriceInternalServerError {

	return &UpdateSkuPriceInternalServerError{}
}

// WithPayload adds the payload to the update sku price internal server error response
func (o *UpdateSkuPriceInternalServerError) WithPayload(payload *models.ErrorResponse) *UpdateSkuPriceInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update sku price internal server error response
func (o *UpdateSkuPriceInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSkuPriceInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
