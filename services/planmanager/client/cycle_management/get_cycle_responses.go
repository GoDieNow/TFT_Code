// Code generated by go-swagger; DO NOT EDIT.

package cycle_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/GoDieNow/TFT_Code/services/planmanager/models"
)

// GetCycleReader is a Reader for the GetCycle structure.
type GetCycleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCycleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCycleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCycleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCycleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCycleOK creates a GetCycleOK with default headers values
func NewGetCycleOK() *GetCycleOK {
	return &GetCycleOK{}
}

/*GetCycleOK handles this case with default header values.

cycle returned
*/
type GetCycleOK struct {
	Payload *models.Cycle
}

func (o *GetCycleOK) Error() string {
	return fmt.Sprintf("[GET /cycle/{id}][%d] getCycleOK  %+v", 200, o.Payload)
}

func (o *GetCycleOK) GetPayload() *models.Cycle {
	return o.Payload
}

func (o *GetCycleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Cycle)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCycleNotFound creates a GetCycleNotFound with default headers values
func NewGetCycleNotFound() *GetCycleNotFound {
	return &GetCycleNotFound{}
}

/*GetCycleNotFound handles this case with default header values.

cycle with id not found
*/
type GetCycleNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetCycleNotFound) Error() string {
	return fmt.Sprintf("[GET /cycle/{id}][%d] getCycleNotFound  %+v", 404, o.Payload)
}

func (o *GetCycleNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetCycleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCycleInternalServerError creates a GetCycleInternalServerError with default headers values
func NewGetCycleInternalServerError() *GetCycleInternalServerError {
	return &GetCycleInternalServerError{}
}

/*GetCycleInternalServerError handles this case with default header values.

unexpected error
*/
type GetCycleInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetCycleInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cycle/{id}][%d] getCycleInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCycleInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetCycleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
