// Code generated by go-swagger; DO NOT EDIT.

package bulk_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListBillRunsByOrganizationParams creates a new ListBillRunsByOrganizationParams object
// no default values defined in spec.
func NewListBillRunsByOrganizationParams() ListBillRunsByOrganizationParams {

	return ListBillRunsByOrganizationParams{}
}

// ListBillRunsByOrganizationParams contains all the bound params for the list bill runs by organization operation
// typically these are obtained from a http.Request
//
// swagger:parameters ListBillRunsByOrganization
type ListBillRunsByOrganizationParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*Id of the billrun to be re-run.
	  Required: true
	  In: path
	*/
	ID string
	/*Amount of months to have in the report
	  In: query
	*/
	Months *int64
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewListBillRunsByOrganizationParams() beforehand.
func (o *ListBillRunsByOrganizationParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	rID, rhkID, _ := route.Params.GetOK("id")
	if err := o.bindID(rID, rhkID, route.Formats); err != nil {
		res = append(res, err)
	}

	qMonths, qhkMonths, _ := qs.GetOK("months")
	if err := o.bindMonths(qMonths, qhkMonths, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindID binds and validates parameter ID from path.
func (o *ListBillRunsByOrganizationParams) bindID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route

	o.ID = raw

	return nil
}

// bindMonths binds and validates parameter Months from query.
func (o *ListBillRunsByOrganizationParams) bindMonths(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false
	if raw == "" { // empty values pass all other validations
		return nil
	}

	value, err := swag.ConvertInt64(raw)
	if err != nil {
		return errors.InvalidType("months", "query", "int64", raw)
	}
	o.Months = &value

	return nil
}
